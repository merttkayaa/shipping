version: '3.8'
services:
  shipping-app:
    build:
      context: ../.
      dockerfile: Dockerfile
    container_name: spring_shipping_app
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - postgresqldb
      - grafana
      - prometheus
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb:5432/shipping_app
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
    networks:
      - general

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - general

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - general
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - general

  postgresqldb:
    image: 'postgres:13.1-alpine'
    container_name: postgresqldb
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: shipping_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - general

  rabbitmq:
    #    image: rabbitmq:3.8
    image: rabbitmq:3.8-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - general

networks:
  general:
    driver: bridge